{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const config = {\r\n    baseUrl: 'https://nomoreparties.co/v1/',\r\n    groupName: 'wff-cohort-12',\r\n    headers: {\r\n        authorization: '99703b1e-7ce0-4717-b386-e423a10c9b54',\r\n        'Content-Type': 'application/json'\r\n    }\r\n}\r\n\r\nconst checkResponse = (res) => {\r\n    if (res.ok) {\r\n        return res.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\nexport const getInitialCards = () => {\r\n    return fetch(config.baseUrl + config.groupName + '/cards', {\r\n        headers: {\r\n            authorization: config.headers.authorization,\r\n        }\r\n    })\r\n    .then(res => checkResponse(res));\r\n}\r\n\r\nexport const getUser = () => {\r\n    return fetch(config.baseUrl + config.groupName + '/users/me', {\r\n        headers: {\r\n            authorization: config.headers.authorization\r\n        }\r\n    })\r\n    .then(res => checkResponse(res));\r\n}\r\n\r\nexport const setUser = (name, about) => {\r\n    return fetch(config.baseUrl + config.groupName + '/users/me', {\r\n        method: 'PATCH',\r\n        headers: {\r\n            authorization: config.headers.authorization,\r\n            'Content-Type': config.headers[\"Content-Type\"]\r\n        },\r\n        body: JSON.stringify({\r\n            name,\r\n            about\r\n        })\r\n    })\r\n    .then(res => checkResponse(res));\r\n}\r\n\r\nexport const setCard = (name, link) => {\r\n    return fetch(config.baseUrl + config.groupName + '/cards', {\r\n        method: 'POST',\r\n        headers: {\r\n            authorization: config.headers.authorization,\r\n            'Content-Type': config.headers[\"Content-Type\"]\r\n        },\r\n        body: JSON.stringify({\r\n            name,\r\n            link\r\n        })\r\n    })\r\n    .then(res => checkResponse(res));\r\n} \r\n  \r\nexport const deleteCardRequest = (id) => {\r\n    return fetch(config.baseUrl + config.groupName + '/cards/' + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            authorization: config.headers.authorization,\r\n            'Content-Type': config.headers[\"Content-Type\"]\r\n        }\r\n    })\r\n    .then(res => checkResponse(res));\r\n}\r\n  \r\nexport const setLike = (id) => {\r\n    return fetch(config.baseUrl + config.groupName + '/cards/likes/' + id, {\r\n        method: 'PUT',\r\n        headers: {\r\n            authorization: config.headers.authorization,\r\n            'Content-Type': config.headers[\"Content-Type\"]\r\n        }\r\n    })\r\n    .then(res => checkResponse(res));\r\n} \r\n  \r\nexport const deleteLike = (id) => {\r\n    return fetch(config.baseUrl + config.groupName + '/cards/likes/' + id, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            authorization: config.headers.authorization,\r\n            'Content-Type': config.headers[\"Content-Type\"]\r\n        }\r\n    })\r\n    .then(res => checkResponse(res));\r\n}\r\n\r\nexport const setAvatar = (src) => {\r\n    return fetch(config.baseUrl + config.groupName + '/users/me/avatar', {\r\n        method: 'PATCH',\r\n        headers: {\r\n            authorization: config.headers.authorization,\r\n            'Content-Type': config.headers[\"Content-Type\"]\r\n        },\r\n        body: JSON.stringify({\r\n            avatar: src,\r\n        })\r\n    })\r\n    .then(res => checkResponse(res));\r\n}\r\n","export { createCard, handleDeleteCard, handleCardLike };\r\nimport { deleteCardRequest, setLike, deleteLike } from \"./api\";\r\n\r\nconst createCard = (\r\n    card, author, deleteHandler, imageHandler, likeHandler\r\n) => {\r\n    const cardTemplate = document.querySelector('#card-template').content;\r\n    const cardItem = cardTemplate.querySelector('.card').cloneNode(true);\r\n    const cardImage = cardItem.querySelector('.card__image');\r\n    const cardDescriptionTitle = cardItem.querySelector('.card__title');\r\n    const cardDeleteButton = cardItem.querySelector('.card__delete-button');\r\n    const cardLikeButton = cardItem.querySelector('.card__like-button');\r\n\r\n    cardImage.alt = card.name;\r\n    cardImage.src = card.link;\r\n    cardDescriptionTitle.textContent = card.name;\r\n    cardLikeButton.textContent = card.likes.length;\r\n    if (author != card.owner._id) {\r\n        cardDeleteButton.disabled = true;\r\n        cardDeleteButton.hidden = true;\r\n    }\r\n\r\n    cardDeleteButton.addEventListener('click', () => {\r\n        deleteHandler(card._id, cardItem);\r\n    });\r\n    cardImage.addEventListener('click', () => {\r\n        imageHandler(card.link, card.name);\r\n    });\r\n    cardLikeButton.addEventListener('click', (evt) => {\r\n        likeHandler(\r\n            card._id, evt.target,\r\n            evt.target.classList.contains('card__like-button_is-active')\r\n        );\r\n    });\r\n\r\n    return cardItem;\r\n}\r\n\r\nconst toggleLike = (buttonLikeElement, isLiked, likesCount) => {\r\n    if (!isLiked) {\r\n        buttonLikeElement.classList.add('card__like-button_is-active');\r\n    } \r\n    else {\r\n        buttonLikeElement.classList.remove('card__like-button_is-active');\r\n    }\r\n    buttonLikeElement.textContent = likesCount;\r\n}\r\n\r\nconst handleCardLike = (cardId, buttonLikeElement, isLiked) => {\r\n    if (isLiked) {\r\n        deleteLike(cardId)\r\n            .then((result) => {\r\n                toggleLike(buttonLikeElement, isLiked, result.likes.length)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    } \r\n    else {\r\n        setLike(cardId)\r\n            .then((result) => {\r\n                toggleLike(buttonLikeElement, isLiked, result.likes.length)\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n}\r\n\r\nconst handleDeleteCard = (cardId, cardItem) => { \r\n    deleteCardRequest(cardId)\r\n        .then((res) => {\r\n            cardItem.remove(); \r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n","export {\r\n    openPopupWindow, closePopupWindow, addCloseByClickListeners\r\n};\r\n\r\nconst openPopupWindow = (modalPopup) => {\r\n    modalPopup.classList.add('popup_is-opened');\r\n    document.addEventListener('keydown', handleCloseByEscape);\r\n}\r\n\r\nconst closePopupWindow = (modalPopup) => {\r\n    modalPopup.classList.remove('popup_is-opened');\r\n    document.removeEventListener('keydown', handleCloseByEscape);\r\n}\r\n\r\nconst handleCloseByClick = (evt) => {\r\n    if (evt.target === evt.currentTarget\r\n        || evt.target.classList.contains('popup__close')) {\r\n        closePopupWindow(evt.currentTarget);\r\n    }\r\n}\r\n\r\nconst handleCloseByEscape = (evt) => {\r\n    if (evt.key === 'Escape') {\r\n        const openedPopup = document.querySelector('.popup_is-opened');\r\n        closePopupWindow(openedPopup);\r\n    }\r\n}\r\n\r\nconst addCloseByClickListeners = (allPopups) => {\r\n    allPopups.forEach((popup) => {\r\n        popup.addEventListener('click', handleCloseByClick)\r\n    })\r\n}","export { enableValidation, clearValidation };\r\n\r\nconst enableValidation = (validationConfig) => {\r\n    const formList = Array.from(document.querySelectorAll(\r\n        validationConfig.formSelector\r\n    ));\r\n    formList.forEach((form) => {\r\n        setEventListeners(form, validationConfig);\r\n    });\r\n};\r\n\r\nconst setEventListeners = (form, validationConfig) => {\r\n    const inputList = Array.from(form.querySelectorAll(\r\n        validationConfig.inputSelector\r\n    ));\r\n    const submitButton = form.querySelector(\r\n        validationConfig.submitButtonSelector\r\n    );\r\n    toggleButtonState(inputList, submitButton, validationConfig);\r\n    inputList.forEach((input) => {\r\n        input.addEventListener('input', (evt) => {\r\n            isValid(form, input, validationConfig);\r\n            toggleButtonState(inputList, submitButton, validationConfig);\r\n        });\r\n    });\r\n};\r\n  \r\nconst isValid = (form, input, validationConfig) => {\r\n    if (input.validity.patternMismatch) {\r\n        input.setCustomValidity(input.dataset.errorMessage);\r\n    } \r\n    else {\r\n        input.setCustomValidity(\"\");\r\n    };\r\n    if (!input.validity.valid) {\r\n        showInputError(form, input, input.validationMessage, validationConfig);\r\n    } \r\n    else {\r\n        hideInputError(form, input, validationConfig);\r\n    };\r\n}\r\n  \r\nconst showInputError = (form, input, errorMessage, validationConfig) => {\r\n    const errorElement = form.querySelector(`.${input.id}-error`);\r\n    input.classList.add(validationConfig.inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    errorElement.classList.add(validationConfig.errorClass);\r\n}\r\n  \r\nconst hideInputError = (form, input, validationConfig) => {\r\n    const errorElement = form.querySelector(`.${input.id}-error`);\r\n    input.classList.remove(validationConfig.inputErrorClass);\r\n    errorElement.classList.remove(validationConfig.errorClass);\r\n}\r\n  \r\nconst toggleButtonState = (inputList, button, validationConfig) => {\r\n    if (hasInvalidInput(inputList)) {\r\n        button.disabled = true;\r\n        button.classList.add(validationConfig.inactiveButtonClass);\r\n    } \r\n    else {\r\n        button.disabled = false;\r\n        button.classList.remove(validationConfig.inactiveButtonClass);\r\n    };\r\n}; \r\n  \r\nconst hasInvalidInput = (inputList) => {\r\n    return inputList.some((input) => {\r\n        return !input.validity.valid;\r\n    });\r\n};\r\n  \r\nconst clearValidation = (profileForm, validationConfig) => {\r\n    const inputList = Array.from(profileForm.querySelectorAll(\r\n        validationConfig.inputSelector\r\n    ));\r\n    const submitButton = profileForm.querySelector(\r\n        validationConfig.submitButtonSelector\r\n    );\r\n    toggleButtonState(inputList, submitButton, validationConfig);\r\n    inputList.forEach((input) => {\r\n        hideInputError(profileForm, input, validationConfig)\r\n    });\r\n};\r\n","import '../css/index.css';\r\nimport { createCard, handleDeleteCard, handleCardLike } from './card.js';\r\nimport {\r\n    openPopupWindow, closePopupWindow, addCloseByClickListeners\r\n} from './modal.js';\r\nimport { enableValidation, clearValidation } from './validation.js';\r\nimport { \r\n    getInitialCards, getUser, setUser, setCard, setAvatar \r\n} from './api.js';\r\n\r\nconst validationConfig = {\r\n    formSelector: '.popup__form',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'popup__button_disabled',\r\n    inputErrorClass: 'popup__input_type_error',\r\n    errorClass: 'popup__error_visible'\r\n};\r\n\r\n// DOM Nodes\r\n// Page Elements\r\nconst cardsList = document.querySelector('.places__list');\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileDescription = document.querySelector('.profile__description');\r\nconst profileImage = document.querySelector('.profile__image');\r\n// Forms\r\nconst formEdit = document.forms.namedItem('edit-profile');\r\nconst formEditAvatar = document.forms.namedItem('edit-avatar');\r\nconst formAdd = document.forms.namedItem('new-place');\r\n// Buttons\r\nconst editProfileButton = document.querySelector('.profile__edit-button');\r\nconst addProfileButton = document.querySelector('.profile__add-button');\r\nconst profileFormSubmitButton = formEdit.querySelector('.popup__button');\r\nconst cardFormSubmitButton = formAdd.querySelector('.popup__button');\r\nconst avatarFormSubmitButton = formEditAvatar.querySelector('.popup__button');\r\n// Popups\r\nconst allPopups = document.querySelectorAll('.popup');\r\nconst popupTypeEdit = document.querySelector('.popup_type_edit');\r\nconst popupTypeEditAvatar = document.querySelector('.popup_type_edit-avatar');\r\nconst popupTypeNewCard = document.querySelector('.popup_type_new-card');\r\nconst popupTypeImage = document.querySelector('.popup_type_image');\r\n// Popup Elements\r\nconst popupImage = document.querySelector('.popup__image');\r\nconst popupCaption = document.querySelector('.popup__caption');\r\n\r\nlet userId;\r\n\r\n// Image Handler\r\nconst handlePopupImage = (link, name) => {\r\n    openPopupWindow(popupTypeImage);\r\n    popupImage.src = link;\r\n    popupImage.alt = name;\r\n    popupCaption.textContent = name;\r\n}\r\n\r\n\r\n// Submit Handlers\r\n// Edit Profile Handler\r\nconst handleEditProfileFormSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    profileFormSubmitButton.textContent = 'Сохранение...';\r\n    setUser(formEdit.elements.name.value, formEdit.elements.description.value)\r\n        .then((user) => {\r\n            profileTitle.textContent = user.name;\r\n            profileDescription.textContent = user.about;\r\n            closePopupWindow(popupTypeEdit);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n        .finally(()=> {\r\n            profileFormSubmitButton.textContent = 'Сохранить';\r\n        });\r\n}\r\n\r\n// Add Card Handler\r\nconst handleAddCardFormSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    cardFormSubmitButton.textContent = 'Сохранение...';\r\n    setCard(formAdd.elements['place__name'].value, formAdd.elements.link.value)\r\n        .then(card => {\r\n            const newCard = createCard(card, userId,\r\n                handleDeleteCard, handlePopupImage, handleCardLike\r\n            ); \r\n            cardsList.prepend(newCard);  \r\n            clearValidation(formAdd, validationConfig);\r\n            closePopupWindow(popupTypeNewCard);\r\n            evt.target.reset();\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n        .finally(()=> {\r\n            cardFormSubmitButton.textContent = 'Сохранить';\r\n        });\r\n}\r\n\r\n// Add Avatar Handler\r\nconst handleAvatarFormSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    avatarFormSubmitButton.textContent = 'Сохранение...';\r\n    setAvatar(formEditAvatar.elements.link.value)\r\n        .then((user) => {\r\n            profileImage.style.backgroundImage = 'url(' + user.avatar + ')';\r\n            formEditAvatar.reset();\r\n            clearValidation(formEditAvatar, validationConfig);\r\n            closePopupWindow(popupTypeEditAvatar);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        })\r\n        .finally(()=> {\r\n            avatarFormSubmitButton.textContent = 'Сохранить';\r\n        });\r\n}\r\n\r\n// Create Initial Cards When Opening The Page\r\nconst renderCard = (card, author) => {\r\n    const newCard = createCard(\r\n        card, author, handleDeleteCard, handlePopupImage, handleCardLike\r\n    );\r\n    cardsList.append(newCard);\r\n}\r\n\r\n// Create Promises\r\nPromise.all([getUser(), getInitialCards()])\r\n    .then(([user, cards]) => {\r\n        userId = user._id\r\n        profileTitle.textContent = user.name;\r\n        profileDescription.textContent = user.about;\r\n        profileImage.style.backgroundImage = 'url(' + user.avatar + ')';\r\n        cards.forEach((card) => {\r\n            renderCard(card, userId);\r\n        });\r\n    })\r\n    .catch((err) => {\r\n        console.log(err);\r\n    });\r\n\r\n// Listeners\r\n// Click Listeners\r\neditProfileButton.addEventListener('click', () => {\r\n    openPopupWindow(popupTypeEdit);\r\n    formEdit.elements.name.value = profileTitle.textContent;\r\n    formEdit.elements.description.value = profileDescription.textContent;\r\n});\r\naddProfileButton.addEventListener('click', () => {\r\n    openPopupWindow(popupTypeNewCard)\r\n});\r\nprofileImage.addEventListener('click', () => {\r\n    openPopupWindow(popupTypeEditAvatar);\r\n});\r\naddCloseByClickListeners(allPopups);\r\n// Submit Listeners\r\nformEdit.addEventListener('submit', handleEditProfileFormSubmit);\r\nformAdd.addEventListener('submit', handleAddCardFormSubmit);\r\nformEditAvatar.addEventListener('submit', (evt) => handleAvatarFormSubmit(evt));\r\n\r\n// Enable Validation\r\nenableValidation(validationConfig);\r\n"],"names":["config","checkResponse","res","ok","json","Promise","reject","concat","status","createCard","card","author","deleteHandler","imageHandler","likeHandler","cardItem","document","querySelector","content","cloneNode","cardImage","cardDescriptionTitle","cardDeleteButton","cardLikeButton","alt","name","src","link","textContent","likes","length","owner","_id","disabled","hidden","addEventListener","evt","target","classList","contains","toggleLike","buttonLikeElement","isLiked","likesCount","remove","add","handleCardLike","cardId","id","fetch","method","headers","authorization","then","result","catch","err","console","log","setLike","handleDeleteCard","openPopupWindow","modalPopup","handleCloseByEscape","closePopupWindow","removeEventListener","handleCloseByClick","currentTarget","key","openedPopup","isValid","form","input","validationConfig","validity","patternMismatch","setCustomValidity","dataset","errorMessage","valid","hideInputError","showInputError","validationMessage","errorElement","inputErrorClass","errorClass","toggleButtonState","inputList","button","hasInvalidInput","inactiveButtonClass","some","clearValidation","profileForm","Array","from","querySelectorAll","inputSelector","submitButton","submitButtonSelector","forEach","userId","formSelector","cardsList","profileTitle","profileDescription","profileImage","formEdit","forms","namedItem","formEditAvatar","formAdd","editProfileButton","addProfileButton","profileFormSubmitButton","cardFormSubmitButton","avatarFormSubmitButton","allPopups","popupTypeEdit","popupTypeEditAvatar","popupTypeNewCard","popupTypeImage","popupImage","popupCaption","handlePopupImage","all","_ref","_ref2","user","cards","about","style","backgroundImage","avatar","newCard","append","renderCard","elements","value","description","popup","addCloseByClickListeners","preventDefault","body","JSON","stringify","finally","prepend","reset","handleAvatarFormSubmit","setEventListeners","enableValidation"],"sourceRoot":""}